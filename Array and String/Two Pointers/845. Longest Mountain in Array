class Solution {
    public int longestMountain(int[] arr) {
        int ans = 0; // To store the maximum mountain length found

        // Iterate from index 1 to n-2 (since a mountain needs at least 3 elements)
        for(int i = 1; i < arr.length - 1; i++) {

            // Check if current element is a peak (greater than both neighbors)
            if(arr[i - 1] < arr[i] && arr[i] > arr[i + 1]) {

                // Expand to the left
                int left = i - 1;
                while(left > 0 && arr[left - 1] < arr[left]) {
                    left--;
                }

                // Expand to the right
                int right = i + 1;
                while(right < arr.length - 1 && arr[right] > arr[right + 1]) {
                    right++;
                }

                // Update the max length if a longer mountain is found
                ans = Math.max(ans, right - left + 1);
            }
        }

        return ans; // Return the length of the longest mountain
    }
}
